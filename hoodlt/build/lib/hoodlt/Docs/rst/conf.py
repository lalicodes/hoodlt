# -*- coding: utf-8 -*-
#
# hoodlt documentation build configuration file, created by
# sphinx-quickstart on Thu Feb  9 14:04:47 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import os
import sys
import sphinx
import datetime

from sphinx.domains.python import PythonDomain

# allows typing objects like variant_like to be documented correctly.
# See: https://github.com/sphinx-doc/sphinx/issues/9560
PythonDomain.object_types['class'].roles = ('class', 'exc', 'data', 'obj')
PythonDomain.object_types['data'].roles = ('data', 'class', 'obj')

sphinx_ver = tuple(map(int, sphinx.__version__.split('.')))

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
sys.path.insert(0, os.path.abspath('..'))

os.environ['SPHINX'] = '1'

extensions = [
    'sphinx.ext.autodoc', 'sphinx.ext.autosummary',
    'sphinx.ext.napoleon', 'sphinx.ext.intersphinx', 'sphinx.ext.mathjax',
    'sphinx.ext.todo', 'sphinx.ext.imgmath', 'sphinx_copybutton'
]

if os.getenv("READTHEDOCS"):
    extensions.append("sphinxcontrib.googleanalytics")
    googleanalytics_id = "G-ZR0DNZD21E"

napoleon_include_special_with_doc = True

intersphinx_mapping = {
    'python': ('https://docs.python.org/3', None),
    'numpy': ('https://numpy.org/doc/stable', None),
    'gsd': ('https://gsd.readthedocs.io/en/stable/', None)
}
autodoc_docstring_signature = True
autodoc_typehints_format = 'short'

autodoc_mock_imports = [
    'hoodlt._hoodlt',
    'hoodlt.version_config',
]

templates_path = ['_templates']
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

source_suffix = '.rst'

master_doc = 'index'

project = 'hoodlt'
year = datetime.date.today().year
copyright = f'2017-{year} Alex Travesset'
author = 'Alex Travesset'

version = '0.7'
release = '0.7'

language = 'en'

default_role = 'any'

pygments_style = "friendly"
pygments_dark_style = "native"

todo_include_todos = False

html_theme = 'furo'
html_static_path = ['_static']
html_logo = 'logo.png'
html_theme_options = {
    'sidebar_hide_name': True,
    'top_of_page_buttons': [],
    "navigation_with_keys": True,
    "dark_css_variables": {
        "color-brand-primary": "#5187b2",
        "color-brand-content": "#5187b2",
    },
    "light_css_variables": {
        "color-brand-primary": "#406a8c",
        "color-brand-content": "#406a8c",
    },
}
html_favicon = 'logo.png'

IGNORE_MODULES = ['hoodlt._hoodlt']
IGNORE_CLASSES = []

copybutton_prompt_text = "$ "
copybutton_remove_prompts = True
copybutton_line_continuation_character = "\\"

def autodoc_process_bases(app, name, obj, options, bases):
    """Ignore base classes from the '_hoodlt' module."""
    remove_indices = []
    for i, base in enumerate(bases):
        if (base.__module__ in IGNORE_MODULES or base.__name__.startswith("_")
                or base.__name__ in IGNORE_CLASSES):
            remove_indices.append(i)
    for i in reversed(remove_indices):
        del bases[i]

def skip(app, what, name, obj, skip, options):
    if name == "__init__":
        return False
    return skip

def setup(app):
    """Configure the Sphinx app."""
    app.connect('autodoc-process-bases', autodoc_process_bases)
    app.connect("autodoc-skip-member", skip)
